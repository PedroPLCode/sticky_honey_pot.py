from unittest.mock import patch
from app.utils.exploit_detector import detect_exploit
from app.config import SQL_ATTACK_PATTERNS


def test_detect_exploit_multiple_matches_with_mock():
    mock_patterns = [
        (r"pattern1", "Threat1"),
        (r"pattern2", "Threat2"),
    ]
    with patch("app.utils.exploit_detector.SQL_ATTACK_PATTERNS", mock_patterns):
        test_input = "This contains pattern1 and pattern2"
        result = detect_exploit(test_input)
        assert result is not None
        assert "Threat1" in result
        assert "Threat2" in result


def test_detect_exploit_no_threats():
    test_input = "this is a safe string with no sql injection"
    result = detect_exploit(test_input)
    assert result is None


def test_detect_exploit_case_insensitive():
    pattern, threat_name = SQL_ATTACK_PATTERNS[0]
    test_input = "TEST " + pattern.upper()
    result = detect_exploit(test_input)
    assert result is not None
    assert threat_name in result


def test_detect_exploit_multiple_realistic_matches_with_mock():
    mock_patterns = [
        (r"foo", "ThreatFoo"),
        (r"bar", "ThreatBar"),
    ]
    with patch("app.utils.exploit_detector.SQL_ATTACK_PATTERNS", mock_patterns):
        test_input = "This contains foo and bar"
        result = detect_exploit(test_input)
        assert result is not None
        assert "ThreatFoo" in result
        assert "ThreatBar" in result
